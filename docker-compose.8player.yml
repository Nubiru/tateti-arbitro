services:
    arbitrator:
        build:
            context: .
            dockerfile: Dockerfile.backend
        image: tateti-arbitro:v1.0.0-8player
        container_name: tateti-arbitrator-8player
        ports:
            - "4000:4000"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        environment:
            - NODE_ENV=test
            - DOCKER_ENV=true
            - DOCKER_DISCOVERY=true
            - PORT=4000
            - LOG_LEVEL=debug
            - TRUST_PROXY=true
            - RATE_LIMIT_WINDOW_MS=30000
            - RATE_LIMIT_MAX=2000
        networks:
            - tateti-network
        healthcheck:
            test:
                [
                    "CMD",
                    "node",
                    "-e",
                    "import('http').then(h=>h.get('http://localhost:4000/api/stream/status', r=>process.exit(r.statusCode===200?0:1)))",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

    # 4 Random Bots (ports 3001-3004)
    random-bot-1:
        build:
            context: ./players/random-bot
            dockerfile: Dockerfile
        image: tateti-random-bot:v1.0.0
        container_name: tateti-random-bot-1
        ports:
            - "3001:3001"
        environment:
            - PORT=3001
            - PLAYER_NAME=RandomBot1
        networks:
            - tateti-network
        healthcheck:
            test:
                [
                    "CMD",
                    "node",
                    "-e",
                    "import('http').then(h=>h.get('http://127.0.0.1:3001/health', r=>process.exit(r.statusCode===200?0:1)))",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 20s

    random-bot-2:
        build:
            context: ./players/random-bot
            dockerfile: Dockerfile
        image: tateti-random-bot:v1.0.0
        container_name: tateti-random-bot-2
        ports:
            - "3002:3002"
        environment:
            - PORT=3002
            - PLAYER_NAME=RandomBot2
        networks:
            - tateti-network
        healthcheck:
            test:
                [
                    "CMD",
                    "node",
                    "-e",
                    "import('http').then(h=>h.get('http://127.0.0.1:3002/health', r=>process.exit(r.statusCode===200?0:1)))",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 20s

    random-bot-3:
        build:
            context: ./players/random-bot
            dockerfile: Dockerfile
        image: tateti-random-bot:v1.0.0
        container_name: tateti-random-bot-3
        ports:
            - "3003:3003"
        environment:
            - PORT=3003
            - PLAYER_NAME=RandomBot3
        networks:
            - tateti-network
        healthcheck:
            test:
                [
                    "CMD",
                    "node",
                    "-e",
                    "import('http').then(h=>h.get('http://127.0.0.1:3003/health', r=>process.exit(r.statusCode===200?0:1)))",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 20s

    random-bot-4:
        build:
            context: ./players/random-bot
            dockerfile: Dockerfile
        image: tateti-random-bot:v1.0.0
        container_name: tateti-random-bot-4
        ports:
            - "3004:3004"
        environment:
            - PORT=3004
            - PLAYER_NAME=RandomBot4
        networks:
            - tateti-network
        healthcheck:
            test:
                [
                    "CMD",
                    "node",
                    "-e",
                    "import('http').then(h=>h.get('http://127.0.0.1:3004/health', r=>process.exit(r.statusCode===200?0:1)))",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 20s

    # 4 Algorithm Bots (ports 3005-3008)
    algo-bot-1:
        build:
            context: ./players/algoritmo-bot
            dockerfile: Dockerfile
        image: tateti-algoritmo-bot-1:v1.0.0
        container_name: tateti-algo-bot-1
        ports:
            - "3005:3005"
        environment:
            - PORT=3005
            - PLAYER_NAME=AlgoBot1
        networks:
            - tateti-network
        healthcheck:
            test:
                [
                    "CMD",
                    "node",
                    "-e",
                    "import('http').then(h=>h.get('http://127.0.0.1:3005/health', r=>process.exit(r.statusCode===200?0:1)))",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 20s

    algo-bot-2:
        build:
            context: ./players/algoritmo-bot
            dockerfile: Dockerfile
        image: tateti-algoritmo-bot-2:v1.0.0
        container_name: tateti-algo-bot-2
        ports:
            - "3006:3006"
        environment:
            - PORT=3006
            - PLAYER_NAME=AlgoBot2
        networks:
            - tateti-network
        healthcheck:
            test:
                [
                    "CMD",
                    "node",
                    "-e",
                    "import('http').then(h=>h.get('http://127.0.0.1:3006/health', r=>process.exit(r.statusCode===200?0:1)))",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 20s

    algo-bot-3:
        build:
            context: ./players/algoritmo-bot
            dockerfile: Dockerfile
        image: tateti-algoritmo-bot-3:v1.0.0
        container_name: tateti-algo-bot-3
        ports:
            - "3007:3007"
        environment:
            - PORT=3007
            - PLAYER_NAME=AlgoBot3
        networks:
            - tateti-network
        healthcheck:
            test:
                [
                    "CMD",
                    "node",
                    "-e",
                    "import('http').then(h=>h.get('http://127.0.0.1:3007/health', r=>process.exit(r.statusCode===200?0:1)))",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 20s

    algo-bot-4:
        build:
            context: ./players/algoritmo-bot
            dockerfile: Dockerfile
        image: tateti-algoritmo-bot-4:v1.0.0
        container_name: tateti-algo-bot-4
        ports:
            - "3008:3008"
        environment:
            - PORT=3008
            - PLAYER_NAME=AlgoBot4
        networks:
            - tateti-network
        healthcheck:
            test:
                [
                    "CMD",
                    "node",
                    "-e",
                    "import('http').then(h=>h.get('http://127.0.0.1:3008/health', r=>process.exit(r.statusCode===200?0:1)))",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 20s

networks:
    tateti-network:
        driver: bridge
