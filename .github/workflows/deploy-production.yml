name: Deploy to Production

# Workflow de despliegue a producci√≥n
# Se ejecuta cuando se hace push a las ramas principales

on:
    push:
        branches: [master, main]

jobs:
    # Job 1: Despliegue del frontend a Vercel
    # Construye y despliega el frontend React a producci√≥n
    deploy-frontend:
        name: Deploy Frontend to Vercel
        runs-on: ubuntu-latest

        steps:
            # Paso 1: Obtener el c√≥digo del repositorio
            - name: Checkout code
              uses: actions/checkout@v4

            # Paso 2: Configurar Node.js 20 LTS
            - name: Setup Node.js 20
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            # Paso 3: Instalar dependencias del cliente React
            - name: Install client dependencies
              run: cd client && npm ci

            # Paso 4: Construir frontend para producci√≥n
            - name: Build frontend
              run: cd client && npm run build

            # Paso 5: Desplegar frontend a Vercel en modo producci√≥n
            - name: Deploy to Vercel Production
              uses: amondnet/vercel-action@v25
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
                  vercel-args: "--prod"
                  working-directory: ./public
                  scope: ${{ secrets.VERCEL_ORG_ID }}

    # Job 2: Notificaci√≥n de backend listo
    # Informa que el backend est√° listo para despliegue manual
    deploy-backend:
        name: Backend Deployment Ready
        runs-on: ubuntu-latest

        steps:
            # Paso 1: Mostrar notificaci√≥n de que el backend est√° listo
            - name: Build notification
              run: |
                  echo "‚úÖ Backend Docker image: tateti-arbitro:v1.0.0"
                  echo "üì¶ Deploy to Railway/Render/DigitalOcean manually or via their CLI"
                  echo "üîó Update environment variables with production URLs"
