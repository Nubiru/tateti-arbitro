.configScreen {
  width: 100vw;
  height: 100vh;
  background: var(--bg-primary);
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.configContainer {
  width: 100%;
  max-width: 1400px;
  height: 100%;
  padding: var(--spacing-xl);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xl);
  position: relative;
}

/* Header Layout */
.configHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: var(--spacing-xl);
  gap: var(--spacing-lg);
}

.configTitle {
  font-size: var(--text-2xl);
  color: var(--text-primary);
  margin: 0;
  font-weight: 700;
  text-align: center;
  flex: 1;
}

.headerBackButton,
.headerStartButton {
  min-width: 120px;
  white-space: nowrap;
}

/* Three Column Row */
.threeColumnRow {
  display: flex;
  gap: var(--spacing-lg);
  align-items: flex-start;
  justify-content: center;
  flex: 0 0 auto;
  margin-bottom: var(--spacing-xl);
}

/* Single Column Row */
.singleColumnRow {
  display: flex;
  justify-content: center;
  flex: 1;
  min-height: 0;
}

/* Card Sizing */
.narrowCard {
  flex: 0 0 auto;
  min-height: 0;
  overflow: hidden;
}

.wideCard {
  flex: 0 0 auto;
  width: 500px;
  height: 200px;
  min-height: 0;
  overflow: hidden;
}

.fullWidthCard {
  width: 100%;
  max-width: 1300px;
  height: 540px;
  overflow-y: auto;
}

/* Inline Layout Styles */
.inlineRadioGroup {
  display: flex;
  flex-direction: row;
  gap: var(--spacing-md);
  flex-wrap: wrap;
}

.inlineOptionsGrid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--spacing-md);
  align-items: start;
}

.inlineOptionGroup {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  flex-wrap: wrap;
  line-height: 1.2;
  margin-bottom: var(--spacing-xs);
}

.optionLabel {
  font-size: var(--text-sm);
  font-weight: 600;
  color: var(--text-secondary);
  min-width: 80px;
  flex-shrink: 0;
}

.inlineCheckboxLabel {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  cursor: pointer;
  padding: var(--spacing-xs);
  border-radius: var(--radius-sm);
  transition: all var(--transition-fast);
}

.inlineCheckboxLabel:hover {
  background: var(--bg-tertiary);
}

.noTieSection {
  margin-top: var(--spacing-sm);
  padding-top: var(--spacing-sm);
  border-top: 1px solid var(--border-light);
}

.humanCheckboxLabel {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  cursor: pointer;
  padding: var(--spacing-xs);
  border-radius: var(--radius-sm);
  transition: all var(--transition-fast);
  font-size: var(--text-sm);
  color: var(--text-secondary);
}

.humanCheckboxLabel:hover {
  background: var(--bg-tertiary);
}

/* Legacy styles - keeping for backward compatibility */
.optionGroup {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.optionSubtitle {
  font-size: var(--text-base);
  font-weight: 600;
  color: var(--text-secondary);
  margin: 0;
}

.radioGroup {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
}

.checkboxLabel {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  cursor: pointer;
  padding: var(--spacing-sm);
  border-radius: var(--radius-md);
  transition: all var(--transition-fast);
}

.checkboxLabel:hover {
  background: var(--bg-tertiary);
}

/* Players Section */
.playersGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: var(--spacing-sm);
  padding: var(--spacing-sm);
  /* Ensure we can fit up to 16 players in a 4x4 grid */
  max-width: 100%;
  /* Let the grid size itself based on content, not parent height */
}

/* Responsive grid for different player counts */
.playersGrid[data-player-count='2'] {
  grid-template-columns: repeat(2, 1fr);
  max-width: 400px;
  margin: 0 auto;
}

.playersGrid[data-player-count='4'] {
  grid-template-columns: repeat(2, 1fr);
  max-width: 400px;
  margin: 0 auto;
}

.playersGrid[data-player-count='6'] {
  grid-template-columns: repeat(3, 1fr);
  max-width: 600px;
  margin: 0 auto;
}

.playersGrid[data-player-count='8'] {
  grid-template-columns: repeat(4, 1fr);
  max-width: 800px;
  margin: 0 auto;
}

.playersGrid[data-player-count='10'] {
  grid-template-columns: repeat(5, 1fr);
  max-width: 1000px;
  margin: 0 auto;
}

.playersGrid[data-player-count='16'] {
  grid-template-columns: repeat(4, 1fr);
  max-width: 800px;
  margin: 0 auto;
}

.playerItem {
  display: flex;
  flex-direction: column;
  padding: var(--spacing-xs);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-sm);
  background: var(--bg-secondary);
  min-height: 0;
}

.playerInputsRow {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  width: 100%;
}

.playerNameInput {
  flex: 2;
  min-width: 0;
}

.playerPortInput {
  flex: 1;
  min-width: 80px;
  max-width: 100px;
}

.playerInput {
  flex: 1;
}

/* Start Button Section */
.startSection {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-md) 0;
}

.startButton {
  padding: var(--spacing-lg) var(--spacing-2xl);
  font-size: var(--text-lg);
  font-weight: 600;
  min-width: 200px;
}

.errorMessage {
  color: var(--error-color);
  font-size: var(--text-sm);
  text-align: center;
}

/* Fixed Bottom Navigation */
.bottomNav {
  position: fixed;
  bottom: var(--spacing-xl);
  left: 5%;
  z-index: var(--z-fixed);
}

.backButton {
  padding: var(--spacing-md) var(--spacing-xl);
  font-size: var(--text-base);
  font-weight: 600;
  box-shadow: var(--shadow-xl);
}

.backButton:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-xl);
}
