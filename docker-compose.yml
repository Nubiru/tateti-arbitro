# Configuración de producción para Ta-Te-Ti Arbitrator
# @lastModified 2025-10-05
# @version 1.0.0

services:
    # Ta-Te-Ti Arbitrator
    arbitrator:
        build: .
        image: tateti-arbitro:v1.0.0
        container_name: tateti-arbitrator
        ports:
            - "4000:4000"
        environment:
            - NODE_ENV=production
            - PORT=4000
            - LOG_LEVEL=info
            - TRUST_PROXY=true
            - RATE_LIMIT_WINDOW_MS=900000
            - RATE_LIMIT_MAX=100
        networks:
            - tateti-network
        healthcheck:
            test:
                [
                    "CMD",
                    "node",
                    "-e",
                    "import('http').then(h=>h.get('http://localhost:4000/api/stream/status', r=>process.exit(r.statusCode===200?0:1)))",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        restart: unless-stopped

    # Player 1 - Random Bot
    player1:
        build:
            context: ./players/random-bot
            tags: [tateti-random-bot:v1.0.0]
        container_name: tateti-random-bot-1
        ports:
            - "3001:3001"
        environment:
            - PORT=3001
            - PLAYER_NAME=RandomBot1
        networks:
            - tateti-network
        depends_on:
            arbitrator:
                condition: service_healthy
        restart: unless-stopped

    # Player 2 - Random Bot
    player2:
        build:
            context: ./players/random-bot
            tags: [tateti-random-bot:v1.0.0]
        container_name: tateti-random-bot-2
        ports:
            - "3002:3002"
        environment:
            - PORT=3002
            - PLAYER_NAME=RandomBot2
        networks:
            - tateti-network
        depends_on:
            arbitrator:
                condition: service_healthy
        restart: unless-stopped

    # Player 3 - Random Bot (Production profile)
    player3:
        build:
            context: ./players/random-bot
            tags: [tateti-player-3:latest]
        container_name: tateti-player-3
        ports:
            - "3003:3003"
        environment:
            - PORT=3003
            - PLAYER_NAME=RandomBot3
        networks:
            - tateti-network
        depends_on:
            arbitrator:
                condition: service_healthy
        profiles:
            - production
        restart: unless-stopped

    # Player 4 - Random Bot (Production profile)
    player4:
        build:
            context: ./players/random-bot
            tags: [tateti-player-4:latest]
        container_name: tateti-player-4
        ports:
            - "3004:3004"
        environment:
            - PORT=3004
            - PLAYER_NAME=RandomBot4
        networks:
            - tateti-network
        depends_on:
            arbitrator:
                condition: service_healthy
        profiles:
            - production
        restart: unless-stopped

    # Frontend Interface
    frontend:
        build:
            context: .
            dockerfile: Dockerfile.frontend
        image: tateti-interfaz:v1.0.0
        container_name: tateti-interfaz
        ports:
            - "80:80"
        depends_on:
            arbitrator:
                condition: service_healthy
        networks:
            - tateti-network
        restart: unless-stopped

networks:
    tateti-network:
        driver: bridge

volumes:
    arbitrator-logs:
        driver: local
