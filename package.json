{
  "name": "tateti-arbitro",
  "version": "1.0.0",
  "description": "Arbitro para partidas de Ta-Te-Ti entre bots HTTP.",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "start": "node index.js",
    "dev": "node --watch index.js",
    "test": "jest --runInBand --detectOpenHandles",
    "test:unit": "jest --selectProjects backend-unit --detectOpenHandles",
    "test:unit:watch": "jest --selectProjects backend-unit --watch",
    "test:integration": "jest --selectProjects backend-integration",
    "test:client": "jest --selectProjects client",
    "test:integration:online": "npm run test:integration",
    "test:full": "npm run test:unit && npm run test:client",
    "test:watch": "jest --runInBand --watch --detectOpenHandles",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:client",
    "lint": "eslint . --ext .js,.mjs --ignore-path .gitignore --ignore-pattern 'client/**'",
    "lint:client": "cd client && npm run lint",
    "format:check": "prettier --check .",
    "format:write": "prettier --write .",
    "format:client": "cd client && npm run format:write",
    "qa:format": "npm run format:check && cd client && npm run format:check",
    "qa:lint": "npm run lint && npm run lint:client",
    "qa:test": "npm run test:all",
    "qa:test:unit": "npm run test:unit && npm run test:client",
    "qa:test:integration": "npm run test:integration",
    "qa:precommit": "echo '🔍 Layer 1: Pre-commit QA (Fast)...' && npm run format:check && cd client && npm run format:check && cd .. && npm run lint && npm run lint:client && npm run test:unit && npm run test:client && echo '✅ Pre-commit QA passed!'",
    "qa:prepush": "echo '🔍 Layer 2: Pre-push QA (Comprehensive)...' && npm run qa:precommit && npm run test:integration && cd client && npm run build && cd .. && echo '✅ Pre-push QA passed!'",
    "qa:cicd": "echo '🔍 Layer 3: CI/CD QA (Complete)...' && npm run qa:prepush && npm run build:all && echo '✅ CI/CD QA passed!'",
    "qa:full": "npm run qa:cicd",
    "precommit": "npm run qa:precommit",
    "prepush": "npm run qa:prepush",
    "prepare": "husky install || true",
    "build:frontend": "cd client && npm run build && cd ..",
    "build:backend": "docker build -t tateti-arbitro:v1.0.0 .",
    "build:backend:frontend": "docker build -f Dockerfile.frontend -t tateti-interfaz:v1.0.0 .",
    "build:all": "npm run build:frontend && npm run build:backend && npm run build:backend:frontend",
    "clean:frontend": "rm -rf public/*",
    "clean:docker": "docker system prune -f && docker volume prune -f",
    "clean:all": "npm run docker:down && npm run clean:docker",
    "dev:frontend": "cd client && npm run dev",
    "dev:smoke": "concurrently \"docker-compose -f docker-compose.smoke.yml up\" \"npm run dev:frontend\"",
    "dev:4player": "concurrently \"docker-compose -f docker-compose.4player.yml up\" \"npm run dev:frontend\"",
    "dev:8player": "concurrently \"docker-compose -f docker-compose.8player.yml up\" \"npm run dev:frontend\"",
    "docker:smoke": "npm run build:frontend && docker-compose -f docker-compose.smoke.yml up --build",
    "docker:4player": "npm run build:frontend && docker-compose -f docker-compose.4player.yml up --build",
    "docker:8player": "npm run build:frontend && docker-compose -f docker-compose.8player.yml up --build",
    "docker:prod": "npm run build:all && docker-compose up",
    "docker:down": "docker-compose down && docker-compose -f docker-compose.smoke.yml down && docker-compose -f docker-compose.4player.yml down && docker-compose -f docker-compose.8player.yml down",
    "deploy:smoke": "npm run qa:precommit && npm run docker:smoke",
    "deploy:4player": "npm run qa:precommit && npm run docker:4player",
    "deploy:8player": "npm run qa:precommit && npm run docker:8player",
    "deploy:prod": "npm run qa:full && npm run docker:prod",
    "verify:smoke": "bash scripts/test-smoke-layer.sh",
    "verify:smoke:win": "powershell -ExecutionPolicy Bypass -File scripts/test-smoke-layer.ps1"
  },
  "keywords": [
    "tateti",
    "tic-tac-toe",
    "arbitro"
  ],
  "author": "",
  "license": "ISC",
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=9.0.0"
  },
  "dependencies": {
    "axios": "^1.12.2",
    "cors": "^2.8.5",
    "express": "^5.1.0",
    "express-rate-limit": "^7.1.5",
    "express-validator": "^7.0.1",
    "helmet": "^7.1.0"
  },
  "devDependencies": {
    "@babel/core": "^7.23.0",
    "@babel/plugin-syntax-import-meta": "^7.10.4",
    "@babel/preset-env": "^7.23.0",
    "@babel/preset-react": "^7.23.0",
    "@testing-library/jest-dom": "^6.1.4",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^14.5.1",
    "autocannon": "^7.12.0",
    "babel-jest": "^29.7.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.55.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^6.1.1",
    "eventsource": "^2.0.2",
    "husky": "^9.1.7",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "supertest": "^6.3.3"
  }
}
