# Configuración de Pruebas Rápidas (Smoke Tests)
# @lastModified 2025-10-08
# @version 1.0.0
# Uso: npm run docker:smoke

services:
    # Backend Arbitrator
    arbitrator:
        build:
            context: .
            dockerfile: Dockerfile
        image: tateti-arbitro:v1.0.0
        container_name: tateti-arbitrator-smoke
        ports:
            - "4000:4000"
        environment:
            - NODE_ENV=test
            - PORT=4000
            - LOG_LEVEL=debug
            - TRUST_PROXY=true
            - RATE_LIMIT_WINDOW_MS=60000
            - RATE_LIMIT_MAX=1000
        networks:
            - tateti-network
        healthcheck:
            test:
                [
                    "CMD",
                    "node",
                    "-e",
                    "import('http').then(h=>h.get('http://localhost:4000/api/stream/status', r=>process.exit(r.statusCode===200?0:1)))",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

    # Random Bot 1
    random-bot-1:
        build:
            context: ./players/random-bot
            dockerfile: Dockerfile
        image: tateti-random-bot:v1.0.0
        container_name: tateti-random-bot-1
        ports:
            - "3001:3001"
        environment:
            - PORT=3001
            - PLAYER_NAME=RandomBot1
        networks:
            - tateti-network
        depends_on:
            arbitrator:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD",
                    "node",
                    "-e",
                    "import('http').then(h=>h.get('http://127.0.0.1:3001/health', r=>process.exit(r.statusCode===200?0:1)))",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 20s

    # Random Bot 2
    random-bot-2:
        build:
            context: ./players/random-bot
            dockerfile: Dockerfile
        image: tateti-random-bot:v1.0.0
        container_name: tateti-random-bot-2
        ports:
            - "3002:3002"
        environment:
            - PORT=3002
            - PLAYER_NAME=RandomBot2
        networks:
            - tateti-network
        depends_on:
            arbitrator:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD",
                    "node",
                    "-e",
                    "import('http').then(h=>h.get('http://127.0.0.1:3002/health', r=>process.exit(r.statusCode===200?0:1)))",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 20s

networks:
    tateti-network:
        driver: bridge
